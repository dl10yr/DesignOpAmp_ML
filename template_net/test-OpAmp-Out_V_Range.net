* Z:\home\dl10yr\Dropbox\Analog_Design_ML\opamp\template\test-OpAmp_OutVolRange.asc
V1 VDD 0 {half}
VIN VIN 0 {VIN}
V3 0 VSS {half}
R1 N001 VIN 20k
R2 vout1 N001 20k
R3 N002 0 20k
R4 vos N002 20k
R5 N003 N004 20k
R6 vout2 N003 20k
E1 N004 0 VIN 0 -1
XX2 0 N003 VDD VSS vout2 opamp-ml params: opamp-ML
XX3 0 N001 VDD VSS vout1 opamp-ml params: opamp-ML
XX4 0 N002 VDD VSS vos opamp-ml params: opamp-ML

* block symbol definitions
.subckt opamp-ml vinp vinm vdd vss vout
M1 N003 N004 vss vss NMOS l=0.2u w=3.4u m=1
M3 N001 vinm N003 N003 NMOS l=0.2u w=4.6u m=1
M4 vout N004 vss vss NMOS l=0.2u w=20.4u m=1
M2 N002 vinp N003 N003 NMOS l=0.2u w=4.6u m=1
M5 vdd N001 N002 vdd PMOS l=0.2u w=3.0u m=1
M6 vdd N001 N001 vdd PMOS l=0.2u w=3.0u m=1
M7 vdd N002 vout NC_01 PMOS l=0.2u w=37.8u m=1
C1 N002 vout 0.3p
M8 N004 N004 vss vss NMOS l=0.2u w=1.7u m=1
R1 vdd N004 100k
.include tsmc018.lib
.ends opamp-ml

.model NMOS NMOS
.model PMOS PMOS
.lib C:\users\dl10yr\My Documents\LTspiceXVII\lib\cmp\standard.mos
.param half=1.5
.dc VIN 10m {half} {(half-10m)/100}
.meas DC Vorn FIND V(VIN) WHEN 1-ABS(V(vout1)-V(vos))/V(vin)=0.05
.meas DC Vorp FIND V(VIN) when 1-ABS(V(vout2)-V(vos))/V(vin)=0.05
.meas DC Vor param = Vorp + Vorn
.meas DC Vor2 param = 100*Vor/(2*half)
.backanno
.end
